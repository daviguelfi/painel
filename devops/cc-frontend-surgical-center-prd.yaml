apiVersion: v1
kind: ConfigMap
metadata:
  name: cc-frontend-prd-config
  namespace: cc-giro-sala
data:
  env: prd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cc-frontend-surgical-center
  namespace: cc-giro-sala
  labels:
    app: cc-frontend-surgical-center
    cloud: azure
    environment: prd
    journey: gestao_hospitalar
    oi: "1000001015"
    product: cc_giro_sala
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 1
  selector:
    matchLabels:
      app: cc-frontend-surgical-center
      cloud: azure
      environment: prd
      journey: gestao_hospitalar
      oi: "1000001015"
      product: cc_giro_sala
  template:
    metadata:
      namespace: cc-giro-sala
      labels:
        app: cc-frontend-surgical-center
        cloud: azure
        environment: prd
        journey: gestao_hospitalar
        oi: "1000001015"
        product: cc_giro_sala
    spec:
      imagePullSecrets:
      - name: dasa-images
      containers:
      - name: cc-frontend-surgical-center
        image: ${IMAGE_VERSION}
        envFrom:
            - configMapRef:
               name: cc-frontend-prd-config
        ports:
            - containerPort: 3041
        livenessProbe:
          httpGet:
            path: /nginx-health
            port: 3041
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 120
          periodSeconds: 240
          timeoutSeconds: 240
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /nginx-health
            port: 3041
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 120
          successThreshold: 1
          failureThreshold: 6
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "200m"
      tolerations:
        - key: "kubernetes.azure.com/scalesetpriority"
          operator: "Equal"
          value: "spot"
          effect: "NoSchedule"
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  namespace: cc-giro-sala
  name: cc-frontend-surgical-center
  labels:
    app: cc-frontend-surgical-center
    cloud: azure
    environment: prd
    journey: gestao_hospitalar
    oi: "1000001015"
    product: cc_giro_sala
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cc-frontend-surgical-center
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 90
---
kind: Service
apiVersion: v1
metadata:
   namespace: cc-giro-sala
   name: cc-frontend-surgical-center
   annotations:
     service.beta.kubernetes.io/azure-load-balancer-internal: "true"
     external-dns.alpha.kubernetes.io/hostname: cc-frontend-surgical-center.azr-prd02.dasaexp.io
     external-dns.alpha.kubernetes.io/ttl: "5"
   labels:
    app: cc-frontend-surgical-center
    cloud: azure
    environment: prd
    journey: gestao_hospitalar
    oi: "1000001015"
    product: cc_giro_sala
spec:
   selector:
    app: cc-frontend-surgical-center
    cloud: azure
    environment: prd
    journey: gestao_hospitalar
    oi: "1000001015"
    product: cc_giro_sala
   ports:
   - port: 80
     targetPort: 3041
   type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cc-frontend-surgical-center
  namespace: cc-giro-sala
  annotations:
    nginx.ingress.kubernetes.io/load-balance: ewma
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - cc-frontend-surgical-center.azr-prd02.dasaexp.io
      secretName: azr-prd02-ingress-secret-tls
  rules:
    - host: cc-frontend-surgical-center.azr-prd02.dasaexp.io
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: cc-frontend-surgical-center
                port:
                  number: 80
